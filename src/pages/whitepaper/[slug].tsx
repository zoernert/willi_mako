import React, { useState } from 'react';import { GetStaticPaths, GetStaticProps } from 'next';import Head from 'next/head';import { useRouter } from 'next/router';import { Container, Typography, Box, Button, TextField, Alert, CircularProgress, Paper, List, ListItem, ListItemText } from '@mui/material';import Link from 'next/link';import { ArrowBack as BackIcon } from '@mui/icons-material';// Dummy-Daten für Whitepaper und Artikel (später vom CMS)interface Whitepaper {  id: string;  title: string;  slug: string;  description: string;  full_content_markdown: string; // Für die Artikel-Generierung, nicht direkt angezeigt  pdf_file_url: string;  thumbnail_image_url?: string;  published_date: string;  seo_title?: string;  seo_description?: string;  canonical_url?: string;}interface WhitepaperArticle {  id: string;  title: string;  slug: string;  short_description: string;  whitepaper_slug: string;}const dummyWhitepapers: Whitepaper[] = [  {    id: '1',    title: 'Whitepaper: Die Zukunft der Energie',    slug: 'die-zukunft-der-energie',    description: 'Erfahren Sie, wie digitale Infrastrukturen die Energiewende vorantreiben.',    full_content_markdown: '# Die Zukunft der Energie\n\nDies ist der vollständige Inhalt des Whitepapers. Er wird nicht direkt auf der Detailseite angezeigt, sondern dient als Quelle für die Artikel.\n\n## Abschnitt 1: Digitale Infrastrukturen\n\nDigitale Infrastrukturen sind entscheidend für die Energiewende. Sie ermöglichen eine effizientere Steuerung und Verteilung.\n\n## Abschnitt 2: Smart Grids\n\nSmart Grids sind intelligente Stromnetze, die den Energiefluss optimieren und erneuerbare Energien integrieren.\n',    pdf_file_url: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf',    thumbnail_image_url: 'https://via.placeholder.com/600x400?text=Whitepaper+1',    published_date: '2023-01-15',    seo_title: 'Whitepaper: Die Zukunft der Energie - Stromhaltig',    seo_description: 'Laden Sie unser Whitepaper über die Zukunft der Energie und digitale Infrastrukturen herunter.',  },  {    id: '2',    title: 'Smart Grids: Effizienz und Nachhaltigkeit',    slug: 'smart-grids-effizienz',    description: 'Ein tiefer Einblick in die Vorteile und Herausforderungen intelligenter Stromnetze.',    full_content_markdown: '# Smart Grids\n\nDies ist der vollständige Inhalt des Whitepapers zu Smart Grids.\n\n## Abschnitt A: Vorteile\n\nSmart Grids bieten zahlreiche Vorteile, darunter erhöhte Effizienz und verbesserte Integration erneuerbarer Energien.\n\n## Abschnitt B: Herausforderungen\n\nDie Implementierung von Smart Grids bringt auch Herausforderungen mit sich, wie Datensicherheit und Investitionskosten.\n',    pdf_file_url: 'https://www.africau.edu/images/default/sample.pdf',    thumbnail_image_url: 'https://via.placeholder.com/600x400?text=Whitepaper+2',    published_date: '2023-03-20',    seo_title: 'Smart Grids Whitepaper: Effizienz und Nachhaltigkeit - Stromhaltig',    seo_description: 'Erfahren Sie alles über Smart Grids, ihre Effizienz und Nachhaltigkeit in unserem Whitepaper.',  },];const dummyArticles: WhitepaperArticle[] = [  {    id: 'a1',    title: 'Digitale Infrastrukturen als Basis der Energiewende',    slug: 'digitale-infrastrukturen-energiewende',    short_description: 'Ein Auszug aus unserem Whitepaper zur Zukunft der Energie.',    whitepaper_slug: 'die-zukunft-der-energie',  },  {    id: 'a2',    title: 'Die Rolle von Smart Grids in der modernen Energieversorgung',    slug: 'smart-grids-energieversorgung',    short_description: 'Einblicke in intelligente Stromnetze aus unserem Whitepaper.',    whitepaper_slug: 'die-zukunft-der-energie',  },  {    id: 'a3',    title: 'Vorteile intelligenter Stromnetze',    slug: 'vorteile-intelligenter-stromnetze',    short_description: 'Ein Artikel über die Vorteile von Smart Grids.',    whitepaper_slug: 'smart-grids-effizienz',  },];interface WhitepaperDetailProps {  whitepaper: Whitepaper;  articles: WhitepaperArticle[];}const WhitepaperDetailPage: React.FC<WhitepaperDetailProps> = ({ whitepaper, articles }) => {  const router = useRouter();  const [email, setEmail] = useState<string>('');  const [loading, setLoading] = useState<boolean>(false);  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);  const handleDownloadRequest = async (e: React.FormEvent) => {    e.preventDefault();    setLoading(true);    setMessage(null);    try {      const response = await fetch('/api/send-whitepaper', {        method: 'POST',        headers: {          'Content-Type': 'application/json',        },        body: JSON.stringify({          email,          whitepaperTitle: whitepaper.title,          whitepaperPdfUrl: whitepaper.pdf_file_url,        }),      });      const data = await response.json();      if (response.ok) {        setMessage({ type: 'success', text: data.message });        setEmail(''); // E-Mail-Feld leeren      } else {        setMessage({ type: 'error', text: data.error || 'Fehler beim Senden des Whitepapers.' });      }    } catch (error) {      console.error('Download request failed:', error);      setMessage({ type: 'error', text: 'Ein unerwarteter Fehler ist aufgetreten.' });    } finally {      setLoading(false);    }  };  if (!whitepaper) {    return (      <Container maxWidth="lg">        <Box display="flex" justifyContent="center" alignItems="center" minHeight="50vh">          <Alert severity="error">Whitepaper nicht gefunden.</Alert>        </Box>      </Container>    );  }  return (    <Container maxWidth="lg">      <Head>        <title>{whitepaper.seo_title || whitepaper.title}</title>        <meta name="description" content={whitepaper.seo_description || whitepaper.description} />        {whitepaper.canonical_url && <link rel="canonical" href={whitepaper.canonical_url} />}      </Head>      <Box sx={{ py: 4 }}>        <Box sx={{ mb: 4 }}>          <Button             variant="outlined"             onClick={() => router.push('/whitepaper')}            startIcon={<BackIcon />}            sx={{ mb: 2, borderColor: '#147a50', color: '#147a50' }}          >            Zurück zu den Whitepapern          </Button>          <Typography variant="h4" component="h1" gutterBottom fontWeight="bold">            {whitepaper.title}          </Typography>          <Typography variant="subtitle1" color="text.secondary" sx={{ mb: 2 }}>            Veröffentlicht: {new Date(whitepaper.published_date).toLocaleDateString('de-DE')}          </Typography>          {whitepaper.thumbnail_image_url && (            <Box sx={{ width: '100%', height: 400, overflow: 'hidden', mb: 3 }}>              <img src={whitepaper.thumbnail_image_url} alt={whitepaper.title} style={{ width: '100%', height: '100%', objectFit: 'cover' }} />            </Box>          )}          <Typography variant="body1" paragraph>            {whitepaper.description}          </Typography>        </Box>        <Paper sx={{ p: 4, mb: 4 }}>          <Typography variant="h5" component="h2" gutterBottom fontWeight="bold">            Whitepaper herunterladen          </Typography>          <Typography variant="body1" paragraph>            Geben Sie Ihre E-Mail-Adresse ein, um das vollständige Whitepaper per E-Mail zu erhalten.          </Typography>          <Box component="form" onSubmit={handleDownloadRequest} sx={{ mt: 2 }}>            <TextField              label="Ihre E-Mail-Adresse"              type="email"              fullWidth              required              value={email}              onChange={(e) => setEmail(e.target.value)}              sx={{ mb: 2 }}            />            <Button              type="submit"              variant="contained"              disabled={loading}              startIcon={loading ? <CircularProgress size={20} color="inherit" /> : null}              sx={{ backgroundColor: '#147a50', '&:hover': { backgroundColor: '#0d5538' } }}            >              {loading ? 'Sende...' : 'Whitepaper anfordern'}            </Button>            {message && (              <Alert severity={message.type} sx={{ mt: 2 }}>                {message.text}              </Alert>            )}          </Box>        </Paper>        {articles.length > 0 && (          <Box sx={{ mb: 4 }}>            <Typography variant="h5" component="h2" gutterBottom fontWeight="bold">              Zugehörige Artikel            </Typography>            <List>              {articles.map((article) => (                <Link href={`/wissen/artikel/${article.slug}`} passHref key={article.id}>                  <ListItem button component="a">                    <ListItemText                       primary={article.title}                      secondary={article.short_description}                    />                  </ListItem>                </Link>              ))}            </List>          </Box>        )}      </Box>    </Container>  );};export const getStaticPaths: GetStaticPaths = async () => {  // Hier würden später die Slugs aller Whitepaper vom CMS abgerufen  const paths = dummyWhitepapers.map((wp) => ({    params: { slug: wp.slug },  }));  return {    paths,    fallback: false, // 'blocking' oder true, je nach Anforderung  };};export const getStaticProps: GetStaticProps = async ({ params }) => {  const slug = params?.slug as string;  // Hier würden später die Daten vom Headless CMS abgerufen  const whitepaper = dummyWhitepapers.find((wp) => wp.slug === slug) || null;  const articles = dummyArticles.filter((article) => article.whitepaper_slug === slug);  if (!whitepaper) {    return {      notFound: true,    };  }  return {    props: {      whitepaper,      articles,    },    revalidate: 60, // Inkrementelle statische Regenerierung  };};export default WhitepaperDetailPage;