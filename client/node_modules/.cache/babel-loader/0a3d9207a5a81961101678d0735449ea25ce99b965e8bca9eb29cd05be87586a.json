{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Grid,Card,CardContent,CardActions,Button,Chip,CircularProgress,Alert,Container,Tabs,Tab,Avatar,List,ListItem,ListItemText,ListItemAvatar,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{Quiz as QuizIcon,Stars,TrendingUp,PlayArrow,Add,EmojiEvents,Timer,Person}from'@mui/icons-material';import{useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizDashboard=()=>{const[activeTab,setActiveTab]=useState(0);const[quizzes,setQuizzes]=useState([]);const[suggestions,setSuggestions]=useState([]);const[userStats,setUserStats]=useState(null);const[leaderboard,setLeaderboard]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[generateDialogOpen,setGenerateDialogOpen]=useState(false);const[generateForm,setGenerateForm]=useState({topicArea:'',difficulty:'medium',questionCount:5});const[generating,setGenerating]=useState(false);const navigate=useNavigate();useEffect(()=>{loadDashboardData();},[]);const loadDashboardData=async()=>{try{setLoading(true);const[quizzesRes,suggestionsRes,statsRes,leaderboardRes]=await Promise.all([axios.get('/api/quiz/quizzes'),axios.get('/api/quiz/suggestions'),axios.get('/api/quiz/stats'),axios.get('/api/quiz/leaderboard')]);setQuizzes(quizzesRes.data);setSuggestions(suggestionsRes.data);setUserStats(statsRes.data);setLeaderboard(leaderboardRes.data);}catch(err){console.error('Error loading dashboard data:',err);setError('Fehler beim Laden der Quiz-Daten');}finally{setLoading(false);}};const handleStartQuiz=async quizId=>{try{const response=await axios.post(`/api/quiz/quizzes/${quizId}/start`);navigate(`/quiz/${quizId}`,{state:{attemptId:response.data.id}});}catch(err){console.error('Error starting quiz:',err);setError('Fehler beim Starten des Quiz');}};const handleGenerateQuiz=async()=>{try{setGenerating(true);const response=await axios.post('/api/quiz/quizzes/generate',generateForm);setGenerateDialogOpen(false);setGenerateForm({topicArea:'',difficulty:'medium',questionCount:5});// Reload quizzes\nconst quizzesRes=await axios.get('/api/quiz/quizzes');setQuizzes(quizzesRes.data);// Navigate to new quiz\nnavigate(`/quiz/${response.data.quiz.id}`);}catch(err){console.error('Error generating quiz:',err);setError('Fehler beim Generieren des Quiz');}finally{setGenerating(false);}};const handleGenerateFromChats=async()=>{try{setGenerating(true);const response=await axios.post('/api/quiz/quizzes/generate-from-chats',{questionCount:5});// Navigate to new quiz\nnavigate(`/quiz/${response.data.quiz.id}`);}catch(err){console.error('Error generating quiz from chats:',err);setError('Fehler beim Generieren des Quiz aus Chats');}finally{setGenerating(false);}};const getDifficultyColor=difficulty=>{switch(difficulty){case'easy':return'success';case'medium':return'warning';case'hard':return'error';default:return'default';}};const getDifficultyText=difficulty=>{switch(difficulty){case'easy':return'Einfach';case'medium':return'Mittel';case'hard':return'Schwer';default:return difficulty;}};if(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{py:4,display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{py:4},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(QuizIcon,{}),\" Wissens-Challenge\"]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},onClose:()=>setError(null),children:error}),userStats&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'primary.main'},children:/*#__PURE__*/_jsx(QuizIcon,{})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:userStats.completed_attempts}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Abgeschlossene Quizzes\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'success.main'},children:/*#__PURE__*/_jsx(TrendingUp,{})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[Math.round(userStats.avg_score),\"%\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Durchschnittliche Punktzahl\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'warning.main'},children:/*#__PURE__*/_jsx(Stars,{})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[Math.round(userStats.best_score),\"%\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Beste Punktzahl\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'info.main'},children:/*#__PURE__*/_jsx(EmojiEvents,{})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:userStats.total_points_earned}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Gesammelte Punkte\"})]})]})})})})]}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:(e,newValue)=>setActiveTab(newValue),children:[/*#__PURE__*/_jsx(Tab,{label:\"Verf\\xFCgbare Quizzes\"}),/*#__PURE__*/_jsx(Tab,{label:\"Empfehlungen\"}),/*#__PURE__*/_jsx(Tab,{label:\"Bestenliste\"})]})}),activeTab===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,mb:3},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Add,{}),onClick:()=>setGenerateDialogOpen(true),children:\"Quiz Generieren\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(Person,{}),onClick:handleGenerateFromChats,disabled:generating,children:generating?'Generiere...':'Aus Chats Generieren'})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:quizzes.map(quiz=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:quiz.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:quiz.description}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,mb:2},children:[/*#__PURE__*/_jsx(Chip,{label:getDifficultyText(quiz.difficulty_level),color:getDifficultyColor(quiz.difficulty_level),size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:`${quiz.question_count} Fragen`,size:\"small\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Chip,{label:`${quiz.time_limit_minutes} Min`,size:\"small\",variant:\"outlined\",icon:/*#__PURE__*/_jsx(Timer,{})})]}),quiz.topic_area&&/*#__PURE__*/_jsx(Chip,{label:quiz.topic_area,size:\"small\",sx:{mb:2}}),quiz.best_score&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"success.main\",children:[\"Beste Punktzahl: \",Math.round(quiz.best_score),\"%\"]})]}),/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(PlayArrow,{}),onClick:()=>handleStartQuiz(quiz.id),children:\"Starten\"})})]})},quiz.id))})]}),activeTab===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Personalisierte Empfehlungen\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:suggestion.quiz.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:suggestion.reason}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,mb:2},children:[/*#__PURE__*/_jsx(Chip,{label:getDifficultyText(suggestion.quiz.difficulty_level),color:getDifficultyColor(suggestion.quiz.difficulty_level),size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:`${suggestion.quiz.question_count} Fragen`,size:\"small\",variant:\"outlined\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[\"Relevanz: \",Math.round(suggestion.relevance_score),\"%\"]})]}),/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(PlayArrow,{}),onClick:()=>handleStartQuiz(suggestion.quiz.id),children:\"Starten\"})})]})},index))})]}),activeTab===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Bestenliste\"}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(List,{children:leaderboard.map((entry,index)=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:index<3?'gold':'grey.500'},children:index+1})}),/*#__PURE__*/_jsx(ListItemText,{primary:entry.display_name,secondary:`${entry.total_points} Punkte • ${entry.quiz_count} Quizzes • ⌀ ${Math.round(entry.average_score)}%`})]},index))})})]}),/*#__PURE__*/_jsxs(Dialog,{open:generateDialogOpen,onClose:()=>setGenerateDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Quiz Generieren\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Themenbereich\",fullWidth:true,variant:\"outlined\",value:generateForm.topicArea,onChange:e=>setGenerateForm({...generateForm,topicArea:e.target.value}),sx:{mb:2}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Schwierigkeit\"}),/*#__PURE__*/_jsxs(Select,{value:generateForm.difficulty,label:\"Schwierigkeit\",onChange:e=>setGenerateForm({...generateForm,difficulty:e.target.value}),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"easy\",children:\"Einfach\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"medium\",children:\"Mittel\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"hard\",children:\"Schwer\"})]})]}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"Anzahl Fragen\",type:\"number\",fullWidth:true,variant:\"outlined\",value:generateForm.questionCount,onChange:e=>setGenerateForm({...generateForm,questionCount:parseInt(e.target.value)||5}),inputProps:{min:1,max:20}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setGenerateDialogOpen(false),children:\"Abbrechen\"}),/*#__PURE__*/_jsx(Button,{onClick:handleGenerateQuiz,disabled:generating,children:generating?'Generiere...':'Generieren'})]})]})]});};export default QuizDashboard;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","Card","CardContent","CardActions","Button","Chip","CircularProgress","Alert","Container","Tabs","Tab","Avatar","List","ListItem","ListItemText","ListItemAvatar","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Quiz","QuizIcon","Stars","TrendingUp","PlayArrow","Add","EmojiEvents","Timer","Person","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","QuizDashboard","activeTab","setActiveTab","quizzes","setQuizzes","suggestions","setSuggestions","userStats","setUserStats","leaderboard","setLeaderboard","loading","setLoading","error","setError","generateDialogOpen","setGenerateDialogOpen","generateForm","setGenerateForm","topicArea","difficulty","questionCount","generating","setGenerating","navigate","loadDashboardData","quizzesRes","suggestionsRes","statsRes","leaderboardRes","Promise","all","get","data","err","console","handleStartQuiz","quizId","response","post","state","attemptId","id","handleGenerateQuiz","quiz","handleGenerateFromChats","getDifficultyColor","getDifficultyText","maxWidth","sx","py","display","justifyContent","children","variant","gutterBottom","alignItems","gap","severity","mb","onClose","container","spacing","item","xs","md","bgcolor","completed_attempts","color","Math","round","avg_score","best_score","total_points_earned","borderBottom","borderColor","value","onChange","e","newValue","label","startIcon","onClick","disabled","map","lg","title","paragraph","description","difficulty_level","size","question_count","time_limit_minutes","icon","topic_area","suggestion","index","reason","relevance_score","entry","primary","display_name","secondary","total_points","quiz_count","average_score","open","autoFocus","margin","fullWidth","target","type","parseInt","inputProps","min","max"],"sources":["/home/thorsten/Development/willi_mako/client/src/components/Quiz/QuizDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n  CircularProgress,\n  Alert,\n  Container,\n  Tabs,\n  Tab,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport {\n  Quiz as QuizIcon,\n  Stars,\n  TrendingUp,\n  PlayArrow,\n  Add,\n  EmojiEvents,\n  School,\n  Timer,\n  Person\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Quiz {\n  id: string;\n  title: string;\n  description: string;\n  difficulty_level: 'easy' | 'medium' | 'hard';\n  topic_area: string;\n  time_limit_minutes: number;\n  question_count: number;\n  attempt_count: number;\n  best_score: number;\n  created_at: string;\n}\n\ninterface QuizSuggestion {\n  quiz: Quiz;\n  reason: string;\n  relevance_score: number;\n}\n\ninterface UserStats {\n  total_attempts: number;\n  completed_attempts: number;\n  avg_score: number;\n  best_score: number;\n  total_points_earned: number;\n}\n\ninterface LeaderboardEntry {\n  display_name: string;\n  total_points: number;\n  quiz_count: number;\n  average_score: number;\n}\n\nconst QuizDashboard: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [quizzes, setQuizzes] = useState<Quiz[]>([]);\n  const [suggestions, setSuggestions] = useState<QuizSuggestion[]>([]);\n  const [userStats, setUserStats] = useState<UserStats | null>(null);\n  const [leaderboard, setLeaderboard] = useState<LeaderboardEntry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [generateDialogOpen, setGenerateDialogOpen] = useState(false);\n  const [generateForm, setGenerateForm] = useState({\n    topicArea: '',\n    difficulty: 'medium' as 'easy' | 'medium' | 'hard',\n    questionCount: 5\n  });\n  const [generating, setGenerating] = useState(false);\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      const [quizzesRes, suggestionsRes, statsRes, leaderboardRes] = await Promise.all([\n        axios.get('/api/quiz/quizzes'),\n        axios.get('/api/quiz/suggestions'),\n        axios.get('/api/quiz/stats'),\n        axios.get('/api/quiz/leaderboard')\n      ]);\n\n      setQuizzes(quizzesRes.data);\n      setSuggestions(suggestionsRes.data);\n      setUserStats(statsRes.data);\n      setLeaderboard(leaderboardRes.data);\n    } catch (err) {\n      console.error('Error loading dashboard data:', err);\n      setError('Fehler beim Laden der Quiz-Daten');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStartQuiz = async (quizId: string) => {\n    try {\n      const response = await axios.post(`/api/quiz/quizzes/${quizId}/start`);\n      navigate(`/quiz/${quizId}`, { state: { attemptId: response.data.id } });\n    } catch (err) {\n      console.error('Error starting quiz:', err);\n      setError('Fehler beim Starten des Quiz');\n    }\n  };\n\n  const handleGenerateQuiz = async () => {\n    try {\n      setGenerating(true);\n      const response = await axios.post('/api/quiz/quizzes/generate', generateForm);\n      setGenerateDialogOpen(false);\n      setGenerateForm({ topicArea: '', difficulty: 'medium', questionCount: 5 });\n      \n      // Reload quizzes\n      const quizzesRes = await axios.get('/api/quiz/quizzes');\n      setQuizzes(quizzesRes.data);\n      \n      // Navigate to new quiz\n      navigate(`/quiz/${response.data.quiz.id}`);\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n      setError('Fehler beim Generieren des Quiz');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const handleGenerateFromChats = async () => {\n    try {\n      setGenerating(true);\n      const response = await axios.post('/api/quiz/quizzes/generate-from-chats', {\n        questionCount: 5\n      });\n      \n      // Navigate to new quiz\n      navigate(`/quiz/${response.data.quiz.id}`);\n    } catch (err) {\n      console.error('Error generating quiz from chats:', err);\n      setError('Fehler beim Generieren des Quiz aus Chats');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'success';\n      case 'medium': return 'warning';\n      case 'hard': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getDifficultyText = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'Einfach';\n      case 'medium': return 'Mittel';\n      case 'hard': return 'Schwer';\n      default: return difficulty;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4, display: 'flex', justifyContent: 'center' }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        <QuizIcon /> Wissens-Challenge\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError(null)}>\n          {error}\n        </Alert>\n      )}\n\n      {/* User Stats */}\n      {userStats && (\n        <Grid container spacing={3} sx={{ mb: 4 }}>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <Avatar sx={{ bgcolor: 'primary.main' }}>\n                    <QuizIcon />\n                  </Avatar>\n                  <Box>\n                    <Typography variant=\"h6\">{userStats.completed_attempts}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Abgeschlossene Quizzes\n                    </Typography>\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <Avatar sx={{ bgcolor: 'success.main' }}>\n                    <TrendingUp />\n                  </Avatar>\n                  <Box>\n                    <Typography variant=\"h6\">{Math.round(userStats.avg_score)}%</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Durchschnittliche Punktzahl\n                    </Typography>\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <Avatar sx={{ bgcolor: 'warning.main' }}>\n                    <Stars />\n                  </Avatar>\n                  <Box>\n                    <Typography variant=\"h6\">{Math.round(userStats.best_score)}%</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Beste Punktzahl\n                    </Typography>\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <Avatar sx={{ bgcolor: 'info.main' }}>\n                    <EmojiEvents />\n                  </Avatar>\n                  <Box>\n                    <Typography variant=\"h6\">{userStats.total_points_earned}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Gesammelte Punkte\n                    </Typography>\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\n          <Tab label=\"Verfügbare Quizzes\" />\n          <Tab label=\"Empfehlungen\" />\n          <Tab label=\"Bestenliste\" />\n        </Tabs>\n      </Box>\n\n      {/* Tab Content */}\n      {activeTab === 0 && (\n        <Box>\n          <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={() => setGenerateDialogOpen(true)}\n            >\n              Quiz Generieren\n            </Button>\n            <Button\n              variant=\"outlined\"\n              startIcon={<Person />}\n              onClick={handleGenerateFromChats}\n              disabled={generating}\n            >\n              {generating ? 'Generiere...' : 'Aus Chats Generieren'}\n            </Button>\n          </Box>\n\n          <Grid container spacing={3}>\n            {quizzes.map((quiz) => (\n              <Grid item xs={12} md={6} lg={4} key={quiz.id}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {quiz.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {quiz.description}\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n                      <Chip\n                        label={getDifficultyText(quiz.difficulty_level)}\n                        color={getDifficultyColor(quiz.difficulty_level) as any}\n                        size=\"small\"\n                      />\n                      <Chip\n                        label={`${quiz.question_count} Fragen`}\n                        size=\"small\"\n                        variant=\"outlined\"\n                      />\n                      <Chip\n                        label={`${quiz.time_limit_minutes} Min`}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<Timer />}\n                      />\n                    </Box>\n                    {quiz.topic_area && (\n                      <Chip\n                        label={quiz.topic_area}\n                        size=\"small\"\n                        sx={{ mb: 2 }}\n                      />\n                    )}\n                    {quiz.best_score && (\n                      <Typography variant=\"body2\" color=\"success.main\">\n                        Beste Punktzahl: {Math.round(quiz.best_score)}%\n                      </Typography>\n                    )}\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<PlayArrow />}\n                      onClick={() => handleStartQuiz(quiz.id)}\n                    >\n                      Starten\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n\n      {activeTab === 1 && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Personalisierte Empfehlungen\n          </Typography>\n          <Grid container spacing={3}>\n            {suggestions.map((suggestion, index) => (\n              <Grid item xs={12} md={6} lg={4} key={index}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {suggestion.quiz.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {suggestion.reason}\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n                      <Chip\n                        label={getDifficultyText(suggestion.quiz.difficulty_level)}\n                        color={getDifficultyColor(suggestion.quiz.difficulty_level) as any}\n                        size=\"small\"\n                      />\n                      <Chip\n                        label={`${suggestion.quiz.question_count} Fragen`}\n                        size=\"small\"\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                    <Typography variant=\"body2\" color=\"primary\">\n                      Relevanz: {Math.round(suggestion.relevance_score)}%\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<PlayArrow />}\n                      onClick={() => handleStartQuiz(suggestion.quiz.id)}\n                    >\n                      Starten\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n\n      {activeTab === 2 && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Bestenliste\n          </Typography>\n          <Card>\n            <List>\n              {leaderboard.map((entry, index) => (\n                <ListItem key={index}>\n                  <ListItemAvatar>\n                    <Avatar sx={{ bgcolor: index < 3 ? 'gold' : 'grey.500' }}>\n                      {index + 1}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={entry.display_name}\n                    secondary={`${entry.total_points} Punkte • ${entry.quiz_count} Quizzes • ⌀ ${Math.round(entry.average_score)}%`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Card>\n        </Box>\n      )}\n\n      {/* Generate Quiz Dialog */}\n      <Dialog open={generateDialogOpen} onClose={() => setGenerateDialogOpen(false)}>\n        <DialogTitle>Quiz Generieren</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Themenbereich\"\n            fullWidth\n            variant=\"outlined\"\n            value={generateForm.topicArea}\n            onChange={(e) => setGenerateForm({ ...generateForm, topicArea: e.target.value })}\n            sx={{ mb: 2 }}\n          />\n          <FormControl fullWidth sx={{ mb: 2 }}>\n            <InputLabel>Schwierigkeit</InputLabel>\n            <Select\n              value={generateForm.difficulty}\n              label=\"Schwierigkeit\"\n              onChange={(e) => setGenerateForm({ ...generateForm, difficulty: e.target.value as any })}\n            >\n              <MenuItem value=\"easy\">Einfach</MenuItem>\n              <MenuItem value=\"medium\">Mittel</MenuItem>\n              <MenuItem value=\"hard\">Schwer</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            margin=\"dense\"\n            label=\"Anzahl Fragen\"\n            type=\"number\"\n            fullWidth\n            variant=\"outlined\"\n            value={generateForm.questionCount}\n            onChange={(e) => setGenerateForm({ ...generateForm, questionCount: parseInt(e.target.value) || 5 })}\n            inputProps={{ min: 1, max: 20 }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setGenerateDialogOpen(false)}>Abbrechen</Button>\n          <Button onClick={handleGenerateQuiz} disabled={generating}>\n            {generating ? 'Generiere...' : 'Generieren'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default QuizDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}