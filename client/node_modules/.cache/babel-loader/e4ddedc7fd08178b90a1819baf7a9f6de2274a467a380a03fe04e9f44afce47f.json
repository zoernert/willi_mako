{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:localStorage.getItem('token'),loading:false,error:null};const authReducer=(state,action)=>{switch(action.type){case'LOGIN_START':return{...state,loading:true,error:null};case'LOGIN_SUCCESS':return{...state,loading:false,user:action.payload.user,token:action.payload.token,error:null};case'LOGIN_FAILURE':return{...state,loading:false,error:action.payload,user:null,token:null};case'LOGOUT':return{...state,user:null,token:null,error:null};case'SET_USER':return{...state,user:action.payload};case'CLEAR_ERROR':return{...state,error:null};default:return state;}};const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Configure axios\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'/api';axios.defaults.baseURL=API_BASE_URL;// Request interceptor to add auth token\naxios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));// Response interceptor to handle auth errors\naxios.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{// Check if user is logged in on mount\nconst token=localStorage.getItem('token');if(token){// Verify token and get user info\naxios.get('/user/profile').then(response=>{dispatch({type:'LOGIN_SUCCESS',payload:{user:response.data.data,token:token}});}).catch(()=>{localStorage.removeItem('token');dispatch({type:'LOGOUT'});});}},[]);const login=async(email,password)=>{dispatch({type:'LOGIN_START'});try{const response=await axios.post('/auth/login',{email,password});const{user,token}=response.data.data;localStorage.setItem('token',token);dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}catch(error){var _error$response2,_error$response2$data,_error$response2$data2;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:(_error$response2$data2=_error$response2$data.error)===null||_error$response2$data2===void 0?void 0:_error$response2$data2.message)||'Login failed';dispatch({type:'LOGIN_FAILURE',payload:errorMessage});throw new Error(errorMessage);}};const register=async(email,password,name,company)=>{dispatch({type:'LOGIN_START'});try{const response=await axios.post('/auth/register',{email,password,name,company});const{user,token}=response.data.data;localStorage.setItem('token',token);dispatch({type:'LOGIN_SUCCESS',payload:{user,token}});}catch(error){var _error$response3,_error$response3$data,_error$response3$data2;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:(_error$response3$data2=_error$response3$data.error)===null||_error$response3$data2===void 0?void 0:_error$response3$data2.message)||'Registration failed';dispatch({type:'LOGIN_FAILURE',payload:errorMessage});throw new Error(errorMessage);}};const logout=()=>{localStorage.removeItem('token');dispatch({type:'LOGOUT'});};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state,login,register,logout,clearError},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsx","_jsx","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","useAuth","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","_ref","children","dispatch","get","then","data","catch","login","email","password","post","setItem","_error$response2","_error$response2$data","_error$response2$data2","errorMessage","message","register","name","company","_error$response3","_error$response3$data","_error$response3$data2","logout","clearError","Provider","value"],"sources":["/home/thorsten/Development/willi_mako/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  company?: string;\n  role: 'admin' | 'user';\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'LOGIN_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'SET_USER'; payload: User }\n  | { type: 'CLEAR_ERROR' };\n\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return { ...state, loading: true, error: null };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.user,\n        token: action.payload.token,\n        error: null,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        user: null,\n        token: null,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        error: null,\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface AuthContextType {\n  state: AuthState;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string, name: string, company?: string) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\naxios.defaults.baseURL = API_BASE_URL;\n\n// Request interceptor to add auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle auth errors\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      axios.get('/user/profile')\n        .then(response => {\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data.data,\n              token: token,\n            },\n          });\n        })\n        .catch(() => {\n          localStorage.removeItem('token');\n          dispatch({ type: 'LOGOUT' });\n        });\n    }\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await axios.post('/auth/login', { email, password });\n      const { user, token } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: { user, token },\n      });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error?.message || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage,\n      });\n      throw new Error(errorMessage);\n    }\n  };\n\n  const register = async (\n    email: string,\n    password: string,\n    name: string,\n    company?: string\n  ): Promise<void> => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await axios.post('/auth/register', {\n        email,\n        password,\n        name,\n        company,\n      });\n      \n      const { user, token } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: { user, token },\n      });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error?.message || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage,\n      });\n      throw new Error(errorMessage);\n    }\n  };\n\n  const logout = (): void => {\n    localStorage.removeItem('token');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const clearError = (): void => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, login, register, logout, clearError }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}